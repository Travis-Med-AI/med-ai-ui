{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { Notifications } from 'med-ai-common';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { NgxMasonryComponent } from 'ngx-masonry';\nimport { StdoutDialogComponent } from './stdout-dialog/stdout-dialog.component';\nimport { EvalImageDialogComponent } from './eval-image-dialog/eval-image-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/eval.service\";\nimport * as i2 from \"../services/notification.service\";\nimport * as i3 from \"ngx-device-detector\";\nimport * as i4 from \"../services/study.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"ngx-masonry\";\nimport * as i11 from \"ngx-infinite-scroll\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@angular/material/card\";\nimport * as i14 from \"@angular/material/tooltip\";\nimport * as i15 from \"@angular/material/icon\";\nimport * as i16 from \"@angular/material/button\";\n\nfunction EvalsComponent_mat_card_8_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function EvalsComponent_mat_card_8_div_3_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const eval_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.openImageDialog(eval_r1.id);\n    });\n    i0.ɵɵelementStart(1, \"img\", 18);\n    i0.ɵɵlistener(\"load\", function EvalsComponent_mat_card_8_div_3_Template_img_load_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.imgLoad();\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const eval_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r2.evalService.getOutputImageUrl(eval_r1.id), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction EvalsComponent_mat_card_8_div_4_mat_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 23);\n    i0.ɵɵtext(1, \"check_box\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EvalsComponent_mat_card_8_div_4_mat_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 24);\n    i0.ɵɵtext(1, \"refresh\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EvalsComponent_mat_card_8_div_4_mat_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 25);\n    i0.ɵɵtext(1, \"cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EvalsComponent_mat_card_8_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, EvalsComponent_mat_card_8_div_4_mat_icon_1_Template, 2, 0, \"mat-icon\", 20);\n    i0.ɵɵtemplate(2, EvalsComponent_mat_card_8_div_4_mat_icon_2_Template, 2, 0, \"mat-icon\", 21);\n    i0.ɵɵtemplate(3, EvalsComponent_mat_card_8_div_4_mat_icon_3_Template, 2, 0, \"mat-icon\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const eval_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"matTooltip\", eval_r1.status);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", eval_r1.status === \"COMPLETED\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", eval_r1.status === \"RUNNING\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", eval_r1.status === \"FAILED\");\n  }\n}\n\nfunction EvalsComponent_mat_card_8_mat_card_content_10_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r17 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r17.key);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 2, item_r17.value));\n  }\n}\n\nfunction EvalsComponent_mat_card_8_mat_card_content_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-content\")(1, \"div\", 26)(2, \"h3\");\n    i0.ɵɵtext(3, \"Class Probabilities\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, EvalsComponent_mat_card_8_mat_card_content_10_div_4_Template, 6, 4, \"div\", 27);\n    i0.ɵɵpipe(5, \"keyvalue\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const eval_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, eval_r1.modelOutput.class_probabilities));\n  }\n}\n\nfunction EvalsComponent_mat_card_8_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function EvalsComponent_mat_card_8_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const eval_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.setEvalVisible(eval_r1.id);\n    });\n    i0.ɵɵtext(1, \"See More\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EvalsComponent_mat_card_8_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function EvalsComponent_mat_card_8_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.setEvalVisible(-1);\n    });\n    i0.ɵɵtext(1, \"See Less\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EvalsComponent_mat_card_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 7)(1, \"mat-card-header\")(2, \"div\", 8);\n    i0.ɵɵtemplate(3, EvalsComponent_mat_card_8_div_3_Template, 2, 1, \"div\", 9);\n    i0.ɵɵtemplate(4, EvalsComponent_mat_card_8_div_4_Template, 4, 4, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-title\", 11);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"slice\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, EvalsComponent_mat_card_8_mat_card_content_10_Template, 6, 3, \"mat-card-content\", 12);\n    i0.ɵɵelementStart(11, \"mat-card-actions\", 13);\n    i0.ɵɵtemplate(12, EvalsComponent_mat_card_8_button_12_Template, 2, 0, \"button\", 14);\n    i0.ɵɵtemplate(13, EvalsComponent_mat_card_8_button_13_Template, 2, 0, \"button\", 14);\n    i0.ɵɵelementStart(14, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function EvalsComponent_mat_card_8_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const eval_r1 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.viewLogs(eval_r1);\n    });\n    i0.ɵɵtext(15, \"View Log\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function EvalsComponent_mat_card_8_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const eval_r1 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.deleteEval(eval_r1.id);\n    });\n    i0.ɵɵtext(17, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const eval_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !!eval_r1.imgOutputPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !eval_r1.imgOutputPath);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", eval_r1.study.seriesUid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(eval_r1.study.seriesUid.length > 15 ? i0.ɵɵpipeBind3(7, 8, eval_r1.study.seriesUid, 0, 15) + \"...\" : eval_r1.study.seriesUid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Diagnosis: \", eval_r1.modelOutput ? eval_r1.modelOutput.display : \"TBD\", \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", eval_r1.id === ctx_r0.visibleEval);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", eval_r1.id != ctx_r0.visibleEval && eval_r1.modelOutput);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", eval_r1.id === ctx_r0.visibleEval);\n  }\n}\n\nexport let EvalsComponent = /*#__PURE__*/(() => {\n  class EvalsComponent {\n    constructor(evalService, notficiationService, deviceService, studyService, dialog) {\n      this.evalService = evalService;\n      this.notficiationService = notficiationService;\n      this.deviceService = deviceService;\n      this.studyService = studyService;\n      this.dialog = dialog;\n      this.searchControl = new FormControl('');\n      this.evals = [];\n      this.totalVisible = 30;\n      this.pageIndex = 0;\n      this.pageSize = 10;\n      this.evalIdChange = new Subject();\n      this.masonryConfig = {\n        // gutter: 1,\n        fitWidth: true,\n        horizontalOrder: true\n      };\n    }\n\n    ngOnInit() {\n      this.fetchEvals();\n      this.searchControl.valueChanges.pipe(debounceTime(500)).subscribe(s => {\n        this.fetchEvals();\n      });\n      this.notficiationService.watchNotificationTypes([Notifications.newResult, Notifications.evalFailed, Notifications.evalStarted]).subscribe(n => this.fetchEvals());\n    }\n\n    fetchEvals() {\n      console.log(`requesting evals for page ${this.pageIndex} with size ${this.totalVisible}`);\n      this.evalService.getEvals(this.pageIndex, this.totalVisible, this.searchControl.value).subscribe(res => {\n        this.evals = res.payload;\n        this.masonry.reloadItems();\n        this.masonry.layout();\n      });\n    }\n\n    getImage(id) {\n      this.evalService.getOutputImage(id);\n    }\n\n    deleteEval(evalId) {\n      this.evalService.deleteEval(evalId).subscribe(r => {\n        this.fetchEvals();\n        this.notficiationService.showNotification('successfully deleted eval');\n      });\n    }\n\n    onScrollUp() {}\n\n    onScrollDown() {\n      this.totalVisible += this.pageSize;\n      this.fetchEvals();\n    }\n\n    viewLogs(studyEval) {\n      const dialogRef = this.dialog.open(StdoutDialogComponent, {\n        data: studyEval,\n        height: '75vh'\n      });\n    }\n\n    onClose() {\n      this.evalIdChange.next(null);\n    }\n\n    setEvalVisible(id) {\n      this.visibleEval = id;\n      this.masonry.layout();\n    }\n\n    imgLoad() {\n      this.masonry.reloadItems();\n      this.masonry.layout();\n    }\n\n    openImageDialog(evalId) {\n      let src = this.evalService.getOutputImageUrl(evalId);\n      const dialogRef = this.dialog.open(EvalImageDialogComponent, {\n        data: src,\n        height: '50vh'\n      });\n    }\n\n  }\n\n  EvalsComponent.ɵfac = function EvalsComponent_Factory(t) {\n    return new (t || EvalsComponent)(i0.ɵɵdirectiveInject(i1.EvalService), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.DeviceDetectorService), i0.ɵɵdirectiveInject(i4.StudyService), i0.ɵɵdirectiveInject(i5.MatDialog));\n  };\n\n  EvalsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EvalsComponent,\n    selectors: [[\"app-evals\"]],\n    viewQuery: function EvalsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(NgxMasonryComponent, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.masonry = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 6,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"top center\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-around\"], [1, \"search-bar\"], [\"fxFill\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Search\", 3, \"formControl\"], [\"infiniteScroll\", \"\", 1, \"container\", 3, \"infiniteScrollDistance\", \"infiniteScrollUpDistance\", \"options\", \"ordered\", \"scrolled\", \"scrolledUp\"], [\"ngxMasonryItem\", \"\", \"class\", \"item\", 4, \"ngFor\", \"ngForOf\"], [\"ngxMasonryItem\", \"\", 1, \"item\"], [\"mat-card-avatar\", \"\", \"fxLayoutAlign\", \"center center\"], [\"class\", \"clickable\", 3, \"click\", 4, \"ngIf\"], [\"mat-fab\", \"\", \"class\", \"avatar\", \"fxLayoutAlign\", \"center center\", 3, \"matTooltip\", 4, \"ngIf\"], [3, \"matTooltip\"], [4, \"ngIf\"], [\"fxLayoutAlign\", \"center\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\"], [1, \"clickable\", 3, \"click\"], [1, \"avatar\", 3, \"src\", \"load\"], [\"mat-fab\", \"\", \"fxLayoutAlign\", \"center center\", 1, \"avatar\", 3, \"matTooltip\"], [\"color\", \"primary\", 4, \"ngIf\"], [\"color\", \"accent\", 4, \"ngIf\"], [\"color\", \"warn\", 4, \"ngIf\"], [\"color\", \"primary\"], [\"color\", \"accent\"], [\"color\", \"warn\"], [1, \"class-probs\"], [\"fxLayoutAlign\", \"space-between\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayoutAlign\", \"space-between\"]],\n    template: function EvalsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"mat-form-field\", 3)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"ngx-masonry\", 5);\n        i0.ɵɵlistener(\"scrolled\", function EvalsComponent_Template_ngx_masonry_scrolled_7_listener() {\n          return ctx.onScrollDown();\n        })(\"scrolledUp\", function EvalsComponent_Template_ngx_masonry_scrolledUp_7_listener() {\n          return ctx.onScrollUp();\n        });\n        i0.ɵɵtemplate(8, EvalsComponent_mat_card_8_Template, 18, 12, \"mat-card\", 6);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControl\", ctx.searchControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"infiniteScrollDistance\", 2)(\"infiniteScrollUpDistance\", 1.5)(\"options\", ctx.masonryConfig)(\"ordered\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.evals);\n      }\n    },\n    directives: [i6.DefaultLayoutDirective, i6.DefaultLayoutAlignDirective, i7.MatFormField, i6.FlexFillDirective, i7.MatLabel, i8.MatInput, i9.DefaultValueAccessor, i9.NgControlStatus, i9.FormControlDirective, i10.NgxMasonryComponent, i11.InfiniteScrollDirective, i12.NgForOf, i13.MatCard, i10.NgxMasonryDirective, i13.MatCardHeader, i13.MatCardAvatar, i12.NgIf, i14.MatTooltip, i15.MatIcon, i13.MatCardTitle, i13.MatCardSubtitle, i13.MatCardContent, i13.MatCardActions, i16.MatButton],\n    pipes: [i12.SlicePipe, i12.KeyValuePipe, i12.DecimalPipe],\n    styles: [\".eval-table{width:100%}.search-bar{padding:1rem}.eval{max-height:15rem;width:45%;margin:1rem}.avatar-default{background-color:#00f}.avatar{width:3rem;height:3rem;-o-object-fit:cover;object-fit:cover;border-radius:50%}.clickable{cursor:pointer}.item{width:20rem;margin-left:1rem;margin-bottom:1rem;min-height:8rem}.container{width:100%;max-height:100%}.class-probs{height:10rem;overflow:auto}\\n\"],\n    encapsulation: 2\n  });\n  return EvalsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}