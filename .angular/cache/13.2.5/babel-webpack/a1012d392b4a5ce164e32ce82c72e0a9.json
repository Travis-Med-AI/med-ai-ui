{"ast":null,"code":"import { filter } from 'rxjs/operators';\nimport { Sockets } from 'med-ai-common';\nimport * as _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"ngx-socket-io\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"./settings.service\";\nexport let NotificationService = /*#__PURE__*/(() => {\n  class NotificationService {\n    constructor(snackBar, socket, http, settingsService) {\n      this.snackBar = snackBar;\n      this.socket = socket;\n      this.http = http;\n      this.settingsService = settingsService;\n      this.baseUrl = `${this.settingsService.getServerUrl()}/realtime`;\n    }\n\n    showNotification(message) {\n      this.snackBar.open(message, '', {\n        duration: 2000\n      });\n    }\n\n    watchNewNotifications() {\n      this.socket.fromEvent(Sockets.notifications).subscribe(data => {\n        this.showNotification(data.message);\n        console.log(`Notification: ${data}`);\n      });\n    }\n\n    getNotifications() {\n      return this.http.get(`${this.baseUrl}/notifications`);\n    }\n\n    readNotification(id) {\n      return this.http.post(`${this.baseUrl}/notifications/read`, {\n        id\n      });\n    }\n\n    readAllNotifications() {\n      return this.http.get(`${this.baseUrl}/notifications/read-all`);\n    }\n\n    getNotificationsSocket() {\n      return this.socket.fromEvent(Sockets.allNotifications);\n    }\n\n    watchNotificationTypes(types) {\n      return this.socket.fromEvent(Sockets.notifications).pipe(filter(n => _.includes(types, n.type)));\n    }\n\n  }\n\n  NotificationService.ɵfac = function NotificationService_Factory(t) {\n    return new (t || NotificationService)(i0.ɵɵinject(i1.MatSnackBar), i0.ɵɵinject(i2.Socket), i0.ɵɵinject(i3.HttpClient), i0.ɵɵinject(i4.SettingsService));\n  };\n\n  NotificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NotificationService,\n    factory: NotificationService.ɵfac,\n    providedIn: 'root'\n  });\n  return NotificationService;\n})();","map":null,"metadata":{},"sourceType":"module"}