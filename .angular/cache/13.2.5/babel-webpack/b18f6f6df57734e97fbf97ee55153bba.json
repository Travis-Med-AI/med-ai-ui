{"ast":null,"code":"import { RegisterModelComponent } from '../register-model/register-model.component';\nimport { Notifications } from 'med-ai-common';\nimport { DeleteConfirmationComponent } from './delete-confirmation/delete-confirmation.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/job.service\";\nimport * as i2 from \"../services/model.service\";\nimport * as i3 from \"../services/notification.service\";\nimport * as i4 from \"@angular/material/dialog\";\n\nfunction ModelsComponent_div_4_mat_card_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"button\", 9);\n    i0.ɵɵtext(3, \"Info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ModelsComponent_div_4_mat_card_1_div_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const job_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return ctx_r7.toggleJob(job_r2.id, job_r2.running);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\")(7, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ModelsComponent_div_4_mat_card_1_div_2_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const job_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.setAsClassifier(job_r2.model);\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ModelsComponent_div_4_mat_card_1_div_2_Template_button_click_9_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const job_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.toggleQuickstart(job_r2.model);\n    });\n    i0.ɵɵtext(10, \"Quickstart\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const job_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Turn \", job_r2.running ? \"Off\" : \"On\", \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Use as \", job_r2.model.modality, \" classifier\");\n  }\n}\n\nfunction ModelsComponent_div_4_mat_card_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Download Failed \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModelsComponent_div_4_mat_card_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Downloading...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModelsComponent_div_4_mat_card_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ModelsComponent_div_4_mat_card_1_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const job_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.retry(job_r2.model.image);\n    });\n    i0.ɵɵtext(2, \"Retry Download\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c0 = function (a0, a1, a2, a3, a4) {\n  return {\n    \"active-card\": a0,\n    \"unpulled-card\": a1,\n    \"inactive-card\": a2,\n    \"failed-card\": a3,\n    \"quickstart-card\": a4\n  };\n};\n\nfunction ModelsComponent_div_4_mat_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ModelsComponent_div_4_mat_card_1_div_2_Template, 11, 2, \"div\", 6);\n    i0.ɵɵtemplate(3, ModelsComponent_div_4_mat_card_1_div_3_Template, 2, 0, \"div\", 7);\n    i0.ɵɵtemplate(4, ModelsComponent_div_4_mat_card_1_div_4_Template, 2, 0, \"div\", 7);\n    i0.ɵɵtemplate(5, ModelsComponent_div_4_mat_card_1_div_5_Template, 3, 0, \"div\", 7);\n    i0.ɵɵelementStart(6, \"div\")(7, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ModelsComponent_div_4_mat_card_1_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const job_r2 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.deleteJob(job_r2);\n    });\n    i0.ɵɵtext(8, \"Delete Model\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const job_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction5(6, _c0, job_r2.running, !job_r2.model.pulled, !job_r2.running, job_r2.model.failed, job_r2.model.quickstart));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", job_r2.model.displayName, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", job_r2.model.pulled && !job_r2.model.failed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", job_r2.model.failed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !job_r2.model.pulled && !job_r2.model.failed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !job_r2.model.pulled || job_r2.model.failed);\n  }\n}\n\nfunction ModelsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, ModelsComponent_div_4_mat_card_1_Template, 9, 12, \"mat-card\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.jobs);\n  }\n}\n\nexport let ModelsComponent = /*#__PURE__*/(() => {\n  class ModelsComponent {\n    constructor(jobService, modelSerivce, notificationService, dialog) {\n      this.jobService = jobService;\n      this.modelSerivce = modelSerivce;\n      this.notificationService = notificationService;\n      this.dialog = dialog;\n      this.jobs = [];\n      this.jobs$ = this.getJobs();\n      this.displayedColumns = ['name', 'lastRun', 'jobToggle'];\n    }\n\n    ngOnInit() {\n      this.notificationService.watchNotificationTypes([Notifications.modelReady]).subscribe(n => this.getJobs());\n    }\n\n    addNew() {\n      this.dialog.open(RegisterModelComponent);\n      this.dialog.afterAllClosed.subscribe(_ => this.getJobs());\n    }\n\n    toggleJob(id, running) {\n      if (running) {\n        this.jobService.killJob(id).subscribe(j => {\n          this.getJobs();\n          this.notificationService.showNotification('Successfully turned job off');\n        });\n      } else {\n        this.jobService.startJob(id).subscribe(j => {\n          this.getJobs();\n          this.notificationService.showNotification('Successfully turned job on');\n        });\n      }\n    }\n\n    getJobs() {\n      this.jobService.getJobs().subscribe(j => this.jobs = j);\n    }\n\n    retry(image) {\n      this.modelSerivce.retryModel(image).subscribe(i => {\n        this.jobService.getJobs();\n        this.notificationService.showNotification('Successfully downloaded');\n      });\n    }\n\n    setAsClassifier(model) {\n      this.modelSerivce.setClassifier(model.image, model.modality).subscribe(res => {\n        this.notificationService.showNotification(`Set ${model.displayName} as classifer for ${model.modality}`);\n      });\n    }\n\n    deleteJob(job) {\n      const dialogRef = this.dialog.open(DeleteConfirmationComponent, {\n        data: {\n          job\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => this.jobService.getJobs());\n    }\n\n    toggleQuickstart(model) {\n      this.modelSerivce.toggleQuickstart(model.id).subscribe(j => {\n        this.getJobs();\n        this.notificationService.showNotification('Successfully toggle job');\n      });\n    }\n\n  }\n\n  ModelsComponent.ɵfac = function ModelsComponent_Factory(t) {\n    return new (t || ModelsComponent)(i0.ɵɵdirectiveInject(i1.JobService), i0.ɵɵdirectiveInject(i2.ModelService), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.MatDialog));\n  };\n\n  ModelsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModelsComponent,\n    selectors: [[\"app-models\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[\"fxLayoutAlign\", \"center center\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"fxLayout\", \"row wrap\", \"class\", \"job-container\", \"fxLayoutAlign\", \"center\", 4, \"ngIf\"], [\"fxLayout\", \"row wrap\", \"fxLayoutAlign\", \"center\", 1, \"job-container\"], [\"class\", \"job-card component-background\", \"fxLayout\", \"column\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayout\", \"column\", 1, \"job-card\", \"component-background\", 3, \"ngClass\"], [\"fxLayoutAlign\", \"center center\", 4, \"ngIf\"], [4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\"]],\n    template: function ModelsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function ModelsComponent_Template_button_click_1_listener() {\n          return ctx.addNew();\n        });\n        i0.ɵɵelementStart(2, \"mat-icon\");\n        i0.ɵɵtext(3, \"add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(4, ModelsComponent_div_4_Template, 2, 1, \"div\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.jobs);\n      }\n    },\n    styles: [\".job-table[_ngcontent-%COMP%]{width:100%}.job-card[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-evenly;width:20rem;opacity:.8;cursor:pointer;height:10rem;font-size:1.5rem;margin-right:1rem;margin-top:1rem}.inactive-card[_ngcontent-%COMP%]{opacity:.5}.active-card[_ngcontent-%COMP%]{background-color:#43a047}.job-container[_ngcontent-%COMP%]{margin:1rem}\"]\n  });\n  return ModelsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}