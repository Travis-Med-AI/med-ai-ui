{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { StudyType } from 'med-ai-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/experiment.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/button\";\n\nfunction NewExperimentComponent_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const studyType_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", studyType_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", studyType_r1, \" \");\n  }\n}\n\nexport let NewExperimentComponent = /*#__PURE__*/(() => {\n  class NewExperimentComponent {\n    constructor(experimentService, dialogRef, data) {\n      this.experimentService = experimentService;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.nameControl = new FormControl();\n      this.studyTypeControl = new FormControl();\n      this.studyTypes = Object.values(StudyType);\n    }\n\n    ngOnInit() {}\n\n    createExperiment() {\n      this.experimentService.addNewExperiment(this.nameControl.value, this.studyTypeControl.value).subscribe(e => this.dialogRef.close());\n    }\n\n  }\n\n  NewExperimentComponent.ɵfac = function NewExperimentComponent_Factory(t) {\n    return new (t || NewExperimentComponent)(i0.ɵɵdirectiveInject(i1.ExperimentService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  NewExperimentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewExperimentComponent,\n    selectors: [[\"app-new-experiment\"]],\n    decls: 12,\n    vars: 3,\n    consts: [[\"fxFill\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Experiment Name\", 3, \"formControl\"], [3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", \"fxFill\", \"\", 3, \"click\"], [3, \"value\"]],\n    template: function NewExperimentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\", 0)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-form-field\", 0)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Study Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-select\", 2);\n        i0.ɵɵtemplate(9, NewExperimentComponent_mat_option_9_Template, 2, 2, \"mat-option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function NewExperimentComponent_Template_button_click_10_listener() {\n          return ctx.createExperiment();\n        });\n        i0.ɵɵtext(11, \"Add\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.nameControl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.studyTypeControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.studyTypes);\n      }\n    },\n    directives: [i3.MatFormField, i4.FlexFillDirective, i3.MatLabel, i5.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlDirective, i7.MatSelect, i8.NgForOf, i9.MatOption, i10.MatButton],\n    styles: [\"\"]\n  });\n  return NewExperimentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}