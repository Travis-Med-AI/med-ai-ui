{"ast":null,"code":"import { Notifications } from 'med-ai-common';\nimport { NewExperimentComponent } from '../new-experiment/new-experiment.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/experiment.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"../services/notification.service\";\nimport * as i4 from \"@angular/material/sidenav\";\nimport * as i5 from \"../study-sidebar/study-sidebar.component\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"../experiment-card/experiment-card.component\";\n\nfunction ExperimentsComponent_div_16_app_experiment_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-experiment-card\", 12);\n    i0.ɵɵlistener(\"deleted\", function ExperimentsComponent_div_16_app_experiment_card_1_Template_app_experiment_card_deleted_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.getExperiments();\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const experiment_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"experiment\", experiment_r3)(\"selectedStudies\", ctx_r2.selectedStudies);\n  }\n}\n\nfunction ExperimentsComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, ExperimentsComponent_div_16_app_experiment_card_1_Template, 1, 2, \"app-experiment-card\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.experiments);\n  }\n}\n\nexport let ExperimentsComponent = /*#__PURE__*/(() => {\n  class ExperimentsComponent {\n    constructor(experimentService, dialog, notficiationService) {\n      this.experimentService = experimentService;\n      this.dialog = dialog;\n      this.notficiationService = notficiationService;\n      this.experiments = [];\n      this.experiementIds = [];\n      this.selectedStudies = [];\n    }\n\n    ngOnInit() {\n      this.getExperiments();\n      let notificationTypes = [Notifications.experimentFailed, Notifications.experimentFinished, Notifications.experimentStarted, Notifications.experimentUpdated];\n      this.notficiationService.watchNotificationTypes(notificationTypes).subscribe(n => this.getExperiments());\n    }\n\n    getExperiments() {\n      this.experimentService.getExperiments().subscribe(es => {\n        this.experiments = es;\n      });\n    }\n\n    updateSelectedStudies(selected) {\n      this.selectedStudies = selected;\n    }\n\n    createNewExperiment() {\n      const dialogRef = this.dialog.open(NewExperimentComponent, {\n        width: '400px'\n      });\n      dialogRef.afterClosed().subscribe(_ => this.getExperiments());\n    }\n\n  }\n\n  ExperimentsComponent.ɵfac = function ExperimentsComponent_Factory(t) {\n    return new (t || ExperimentsComponent)(i0.ɵɵdirectiveInject(i1.ExperimentService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.NotificationService));\n  };\n\n  ExperimentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ExperimentsComponent,\n    selectors: [[\"app-experiments\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[1, \"container\", \"app-background\"], [\"mode\", \"side\", \"opened\", \"\", \"position\", \"start\", 1, \"tree-drawer\"], [\"treeDrawer\", \"\"], [1, \"sidenav\", 3, \"experiments\", \"studiesSelected\"], [\"color\", \"primary\", \"fxLayoutAlign\", \"center center\", 1, \"expand-button\", \"mat-elevation-z8\", \"mat-ripple\", 3, \"click\"], [1, \"content\"], [1, \"data-content\"], [\"fxLayoutAlign\", \"space-between\"], [\"mat-icon-button\", \"\", 3, \"click\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"16px\", 4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"16px\"], [3, \"experiment\", \"selectedStudies\", \"deleted\", 4, \"ngFor\", \"ngForOf\"], [3, \"experiment\", \"selectedStudies\", \"deleted\"]],\n    template: function ExperimentsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r6 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"mat-drawer-container\", 0)(1, \"mat-drawer\", 1, 2)(3, \"app-study-sidebar\", 3);\n        i0.ɵɵlistener(\"studiesSelected\", function ExperimentsComponent_Template_app_study_sidebar_studiesSelected_3_listener($event) {\n          return ctx.updateSelectedStudies($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"mat-drawer-content\")(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function ExperimentsComponent_Template_button_click_5_listener() {\n          i0.ɵɵrestoreView(_r6);\n\n          const _r0 = i0.ɵɵreference(2);\n\n          return _r0.toggle();\n        });\n        i0.ɵɵelementStart(6, \"mat-icon\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 7)(11, \"h2\");\n        i0.ɵɵtext(12, \"Manage Experiments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ExperimentsComponent_Template_button_click_13_listener() {\n          return ctx.createNewExperiment();\n        });\n        i0.ɵɵelementStart(14, \"mat-icon\");\n        i0.ɵɵtext(15, \"add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(16, ExperimentsComponent_div_16_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"experiments\", ctx.experiments);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(_r0.opened ? \"navigate_before\" : \"navigate_next\");\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.experiments);\n      }\n    },\n    directives: [i4.MatDrawerContainer, i4.MatDrawer, i5.StudySidebarComponent, i4.MatDrawerContent, i6.DefaultLayoutAlignDirective, i7.MatIcon, i8.MatButton, i9.NgIf, i6.DefaultLayoutDirective, i6.DefaultLayoutGapDirective, i9.NgForOf, i10.ExperimentCardComponent],\n    styles: [\".container{height:100%}.expand-button{cursor:pointer;width:2rem!important;position:absolute;left:0;top:0;background-color:#fff;height:100%;border:none}.tree-drawer{width:15rem;padding:1rem}.data-content{flex:1;padding:1rem;margin-left:2rem}.content{height:100%;overflow:auto}.sidenav{height:100%}\\n\"],\n    encapsulation: 2\n  });\n  return ExperimentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}