{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Notifications } from 'med-ai-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../services/notification.service\";\nimport * as i3 from \"@angular/router\";\n\nfunction NotificationDialogComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function NotificationDialogComponent_div_4_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const notification_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.view(notification_r1);\n    });\n    i0.ɵɵtext(5, \"View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function NotificationDialogComponent_div_4_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const notification_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.readNotification(notification_r1.id);\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"close\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const notification_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", notification_r1.message, \" \");\n  }\n}\n\nexport let NotificationDialogComponent = /*#__PURE__*/(() => {\n  class NotificationDialogComponent {\n    constructor(dialogRef, data, notifService, router) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.notifService = notifService;\n      this.router = router;\n      this.notifications = this.data;\n    }\n\n    ngOnInit() {}\n\n    readNotification(id) {\n      this.notifService.readNotification(id).subscribe(n => {\n        this.notifications = n;\n\n        if (n.length < 1) {\n          this.dialogRef.close();\n        }\n      });\n    }\n\n    readAllNotifications() {\n      this.notifService.readAllNotifications().subscribe(n => this.dialogRef.close());\n    }\n\n    view(notification) {\n      this.readNotification(notification.id);\n\n      switch (notification.type) {\n        case Notifications.newResult:\n          {\n            this.router.navigate(['evals']);\n            break;\n          }\n\n        case Notifications.evalFailed:\n          {\n            this.router.navigate(['evals']);\n            break;\n          }\n\n        case Notifications.modelReady:\n          {\n            this.router.navigate(['jobs']);\n            break;\n          }\n\n        case Notifications.studyReady:\n          {\n            this.router.navigate(['new-job']);\n            break;\n          }\n      }\n\n      this.dialogRef.close();\n    }\n\n  }\n\n  NotificationDialogComponent.ɵfac = function NotificationDialogComponent_Factory(t) {\n    return new (t || NotificationDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  NotificationDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationDialogComponent,\n    selectors: [[\"app-notification-dialog\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[\"fxLayoutAlign\", \"end\"], [\"mat-button\", \"\", 3, \"click\"], [\"fxLayoutAlign\", \"space-between\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayoutAlign\", \"space-between\"]],\n    template: function NotificationDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function NotificationDialogComponent_Template_button_click_2_listener() {\n          return ctx.readAllNotifications();\n        });\n        i0.ɵɵtext(3, \"Clear\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, NotificationDialogComponent_div_4_Template, 9, 1, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.notifications);\n      }\n    },\n    styles: [\"\"]\n  });\n  return NotificationDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}