{"ast":null,"code":"import { Validators, FormControl } from '@angular/forms';\nimport { THEMES } from '../services/theme.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/model.service\";\nimport * as i3 from \"../services/theme.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction SettingsComponent_form_2_div_3_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const classifier_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"Current \", classifier_r8.modality, \" Classifier: \", classifier_r8.model.image, \"\");\n  }\n}\n\nfunction SettingsComponent_form_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SettingsComponent_form_2_div_3_h3_1_Template, 2, 2, \"h3\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const classifiers_r6 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", classifiers_r6);\n  }\n}\n\nfunction SettingsComponent_form_2_mat_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const image_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", image_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", image_r9, \" \");\n  }\n}\n\nfunction SettingsComponent_form_2_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const modality_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", modality_r10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", modality_r10, \" \");\n  }\n}\n\nfunction SettingsComponent_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_form_2_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.submitClassifier();\n    });\n    i0.ɵɵelementStart(1, \"h2\", 5);\n    i0.ɵɵtext(2, \"Classifier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, SettingsComponent_form_2_div_3_Template, 2, 1, \"div\", 6);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementStart(5, \"mat-form-field\")(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Docker Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-select\", 7);\n    i0.ɵɵtemplate(9, SettingsComponent_form_2_mat_option_9_Template, 2, 2, \"mat-option\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"mat-label\");\n    i0.ɵɵtext(12, \"Modality\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-select\", 8);\n    i0.ɵɵtemplate(14, SettingsComponent_form_2_mat_option_14_Template, 2, 2, \"mat-option\", 3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 9);\n    i0.ɵɵtext(16, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const images_r2 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.classifierForm);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 5, ctx_r0.classifiers$));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", images_r2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.modalities);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.classifierForm.valid);\n  }\n}\n\nfunction SettingsComponent_mat_option_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const theme_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", theme_r13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", theme_r13, \" \");\n  }\n}\n\nexport let SettingsComponent = /*#__PURE__*/(() => {\n  class SettingsComponent {\n    constructor(fb, modelService, themeService) {\n      this.fb = fb;\n      this.modelService = modelService;\n      this.themeService = themeService;\n      this.themes = Object.values(THEMES);\n      this.themeControl = new FormControl('');\n      this.images$ = this.modelService.getImages();\n      this.classifiers$ = this.modelService.getClassifiers();\n      this.modalities = ['CT', 'CR'];\n      this.classifierForm = this.fb.group({\n        image: ['', Validators.required],\n        modality: ['', Validators.required]\n      });\n      this.setupTheme();\n    }\n\n    ngOnInit() {}\n\n    setupTheme() {\n      this.themeService.theme.subscribe(theme => {\n        this.currentTheme = theme;\n      });\n      this.themeControl.valueChanges.subscribe(value => this.themeService.setTheme(value));\n    }\n\n    submitClassifier() {\n      let image = this.classifierForm.get('image').value;\n      let modality = this.classifierForm.get('modality').value;\n      this.modelService.setClassifier(image, modality).subscribe(r => alert(`Set ${image} as classifier`));\n    }\n\n  }\n\n  SettingsComponent.ɵfac = function SettingsComponent_Factory(t) {\n    return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ModelService), i0.ɵɵdirectiveInject(i3.ThemeService));\n  };\n\n  SettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsComponent,\n    selectors: [[\"app-settings\"]],\n    decls: 12,\n    vars: 5,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", \"class\", \"register-form\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"fxLayoutAlign\", \"center center\", \"fxLayout\", \"column\"], [3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"center center\", 1, \"register-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mat-h2\"], [4, \"ngIf\"], [\"formControlName\", \"image\"], [\"formControlName\", \"modality\"], [\"mat-button\", \"\", \"type\", \"submit\", 3, \"disabled\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function SettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n        i0.ɵɵtemplate(2, SettingsComponent_form_2_Template, 17, 7, \"form\", 0);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"h2\");\n        i0.ɵɵtext(6, \"App Theme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\")(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Theme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-select\", 2);\n        i0.ɵɵtemplate(11, SettingsComponent_mat_option_11_Template, 2, 2, \"mat-option\", 3);\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 3, ctx.images$));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formControl\", ctx.themeControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.themes);\n      }\n    },\n    directives: [i4.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i5.DefaultLayoutDirective, i5.DefaultLayoutAlignDirective, i1.FormGroupDirective, i4.NgForOf, i6.MatFormField, i6.MatLabel, i7.MatSelect, i1.NgControlStatus, i1.FormControlName, i8.MatOption, i9.MatButton, i1.FormControlDirective],\n    pipes: [i4.AsyncPipe],\n    styles: [\"\"]\n  });\n  return SettingsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}