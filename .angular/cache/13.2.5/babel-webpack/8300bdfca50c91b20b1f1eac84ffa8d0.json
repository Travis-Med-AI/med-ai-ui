{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { concat, includes, remove } from 'lodash';\nimport { StudyType } from 'med-ai-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/experiment.service\";\nimport * as i2 from \"../services/study.service\";\nimport * as i3 from \"../services/notification.service\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"ngx-infinite-scroll\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/button\";\nimport * as i13 from \"@angular/cdk/drag-drop\";\nimport * as i14 from \"@angular/material/card\";\nimport * as i15 from \"@angular/flex-layout/extended\";\nimport * as i16 from \"@angular/material/tooltip\";\n\nfunction StudySidebarComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const experiment_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", experiment_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", experiment_r4.name, \" \");\n  }\n}\n\nfunction StudySidebarComponent_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const studyType_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", studyType_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", studyType_r5, \" \");\n  }\n}\n\nfunction StudySidebarComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const modality_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", modality_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", modality_r6, \" \");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"active\": a0,\n    \"hidden\": a1\n  };\n};\n\nfunction StudySidebarComponent_mat_card_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 14);\n    i0.ɵɵlistener(\"click\", function StudySidebarComponent_mat_card_28_Template_mat_card_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const study_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.toggleSelect(study_r7.id);\n    })(\"cdkDragStarted\", function StudySidebarComponent_mat_card_28_Template_mat_card_cdkDragStarted_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.hideMultiple();\n    })(\"cdkDragEnded\", function StudySidebarComponent_mat_card_28_Template_mat_card_cdkDragEnded_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.showMultiple();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const study_r7 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c0, ctx_r3.isSelected(study_r7.id), ctx_r3.hideDragged && ctx_r3.isSelected(study_r7.id)))(\"cdkDragData\", study_r7)(\"matTooltip\", study_r7.seriesUid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", study_r7.seriesUid.length > 15 ? i0.ɵɵpipeBind3(2, 4, study_r7.seriesUid, 0, 15) + \"...\" : study_r7.seriesUid, \" \");\n  }\n}\n\nexport let StudySidebarComponent = /*#__PURE__*/(() => {\n  class StudySidebarComponent {\n    constructor(experimentService, studyService, notificationService) {\n      this.experimentService = experimentService;\n      this.studyService = studyService;\n      this.notificationService = notificationService;\n      this.studiesSelected = new EventEmitter();\n      this.experiments = [];\n      this.studyTypes = Object.values(StudyType);\n      this.modalities = ['CT', 'MR', 'CR', 'DX'];\n      this.experimentFilterControl = new FormControl();\n      this.studyTypeControl = new FormControl();\n      this.modalityControl = new FormControl();\n      this.experiementIds = [];\n      this.studies = [];\n      this.searchControl = new FormControl('');\n      this.visibleStudies = 10;\n      this.pageIndex = 0;\n      this.pageSize = 15;\n      this.selectedStudies = [];\n      this.hideDragged = false;\n      this.showFilters = false;\n    }\n\n    ngOnInit() {\n      this.experimentFilterControl.valueChanges.subscribe(e => {\n        if (e) {\n          this.selectedExperiment = e;\n          this.reset();\n        }\n      });\n      this.fetchStudies();\n      this.searchControl.valueChanges.subscribe(v => {\n        if (v) this.reset();\n      });\n      this.studyTypeControl.valueChanges.subscribe(e => {\n        if (e) this.reset();\n      });\n      this.modalityControl.valueChanges.subscribe(e => {\n        if (e) this.reset();\n      });\n    }\n\n    reset() {\n      this.pageIndex = 0;\n      this.visibleStudies = 0;\n      this.studies = [];\n      this.fetchStudies();\n    }\n\n    onScroll() {\n      this.pageIndex += 1;\n      this.fetchStudies();\n    }\n\n    fetchStudies() {\n      if (!this.selectedExperiment) {\n        this.studyService.getStudies(this.pageIndex, this.pageSize, this.searchControl.value, this.studyTypeControl.value).subscribe(studies => {\n          this.visibleStudies += studies.total;\n          this.studies = concat(this.studies, studies.payload);\n        });\n      } else {\n        this.experimentService.getUnusedStudies(this.selectedExperiment, this.pageIndex, this.pageSize, this.searchControl.value, this.studyTypeControl.value, this.modalityControl.value).subscribe(studies => {\n          this.visibleStudies += studies.total;\n          this.studies = concat(this.studies, studies.payload);\n        });\n      }\n    }\n\n    toggleSelect(studyId) {\n      if (!includes(this.selectedStudies, studyId)) {\n        this.selectedStudies.push(studyId);\n      } else {\n        remove(this.selectedStudies, s => s === studyId);\n      }\n\n      this.studiesSelected.emit(this.selectedStudies);\n    }\n\n    isSelected(studyId) {\n      return includes(this.selectedStudies, studyId);\n    }\n\n    hideMultiple() {\n      this.hideDragged = true;\n    }\n\n    showMultiple() {\n      this.hideDragged = false;\n    }\n\n    getExperimentIds() {\n      return this.experiments.map(e => `${e.id}`);\n    }\n\n    addStudies() {\n      let selectedStudies = this.selectedStudies.map(s => parseInt(s));\n      this.experimentService.addStudiesToExperiment(selectedStudies, this.experimentFilterControl.value).subscribe(s => this.reset());\n    }\n\n    addAllToExperiment() {\n      this.experimentService.addAllToExperiment(this.experimentFilterControl.value || '', this.searchControl.value || '', this.studyTypeControl.value || '', this.modalityControl.value || '').subscribe(s => this.reset());\n    }\n\n    clearFilters() {\n      this.experimentFilterControl.reset();\n      this.studyTypeControl.reset();\n      this.searchControl.reset();\n      this.selectedExperiment = null;\n      this.reset();\n    }\n\n  }\n\n  StudySidebarComponent.ɵfac = function StudySidebarComponent_Factory(t) {\n    return new (t || StudySidebarComponent)(i0.ɵɵdirectiveInject(i1.ExperimentService), i0.ɵɵdirectiveInject(i2.StudyService), i0.ɵɵdirectiveInject(i3.NotificationService));\n  };\n\n  StudySidebarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StudySidebarComponent,\n    selectors: [[\"app-study-sidebar\"]],\n    inputs: {\n      experiments: \"experiments\"\n    },\n    outputs: {\n      studiesSelected: \"studiesSelected\"\n    },\n    decls: 33,\n    vars: 14,\n    consts: [[\"fxLayout\", \"column\", \"fxFill\", \"\", 1, \"app-background\"], [\"infiniteScroll\", \"\", \"fxFlex\", \"95\", 1, \"studies-container\", 3, \"infiniteScrollDistance\", \"infiniteScrollThrottle\", \"scrollWindow\", \"scrolled\"], [1, \"search-bar\"], [\"fxFill\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Search\", 3, \"formControl\"], [1, \"filter-button\"], [3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"filters\"], [\"mat-button\", \"\", 1, \"filter-button\", 3, \"click\"], [\"cdkDropList\", \"\", \"id\", \"studies\", 3, \"cdkDropListConnectedTo\"], [\"class\", \"study-card component-background\", \"cdkDrag\", \"\", 3, \"ngClass\", \"cdkDragData\", \"matTooltip\", \"click\", \"cdkDragStarted\", \"cdkDragEnded\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", \"fxFlex\", \"3\", 1, \"add-experiment-button\", 3, \"disabled\", \"click\"], [3, \"value\"], [\"cdkDrag\", \"\", 1, \"study-card\", \"component-background\", 3, \"ngClass\", \"cdkDragData\", \"matTooltip\", \"click\", \"cdkDragStarted\", \"cdkDragEnded\"]],\n    template: function StudySidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵlistener(\"scrolled\", function StudySidebarComponent_Template_div_scrolled_1_listener() {\n          return ctx.onScroll();\n        });\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"mat-form-field\", 3)(6, \"mat-label\");\n        i0.ɵɵtext(7, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 5)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Experiment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-select\", 6);\n        i0.ɵɵtemplate(13, StudySidebarComponent_mat_option_13_Template, 2, 2, \"mat-option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"mat-form-field\", 3)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Study Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-select\", 6);\n        i0.ɵɵtemplate(19, StudySidebarComponent_mat_option_19_Template, 2, 2, \"mat-option\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"mat-form-field\", 3)(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Study Modality\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-select\", 6);\n        i0.ɵɵtemplate(24, StudySidebarComponent_mat_option_24_Template, 2, 2, \"mat-option\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function StudySidebarComponent_Template_button_click_25_listener() {\n          return ctx.clearFilters();\n        });\n        i0.ɵɵtext(26, \"Clear\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 10);\n        i0.ɵɵtemplate(28, StudySidebarComponent_mat_card_28_Template, 3, 11, \"mat-card\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function StudySidebarComponent_Template_button_click_29_listener() {\n          return ctx.addStudies();\n        });\n        i0.ɵɵtext(30, \"Add Selected to Experiment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function StudySidebarComponent_Template_button_click_31_listener() {\n          return ctx.addAllToExperiment();\n        });\n        i0.ɵɵtext(32, \"Add All to Experiment\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"infiniteScrollDistance\", 5)(\"infiniteScrollThrottle\", 50)(\"scrollWindow\", false);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formControl\", ctx.searchControl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.experimentFilterControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.experiments);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.studyTypeControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.studyTypes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.modalityControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.modalities);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"cdkDropListConnectedTo\", ctx.getExperimentIds());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.studies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.experimentFilterControl.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.experimentFilterControl.value);\n      }\n    },\n    directives: [i4.DefaultLayoutDirective, i4.FlexFillDirective, i5.InfiniteScrollDirective, i4.DefaultFlexDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i8.DefaultValueAccessor, i8.NgControlStatus, i8.FormControlDirective, i9.MatSelect, i10.NgForOf, i11.MatOption, i12.MatButton, i13.CdkDropList, i14.MatCard, i13.CdkDrag, i10.NgClass, i15.DefaultClassDirective, i16.MatTooltip],\n    pipes: [i10.SlicePipe],\n    styles: [\".studies-container{overflow-y:auto}.mat-drawer-inner-container{overflow:hidden!important;display:flex;flex-direction:column;height:100%}.study-card{margin-top:1rem;cursor:pointer;height:1.5rem}mat-card.active{filter:brightness(50%)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box:last-child{border:none}.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.hidden{visibility:hidden}.filter-button{width:100%}\\n\"],\n    encapsulation: 2\n  });\n  return StudySidebarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}